{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "Pettysave Backend Internship Assessment",
    "contact" : {
      "email" : "onikoyiridwan@gmail.com"
    },
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:5000"
  } ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "required": ["first_name", "last_name", "address", "email", "password"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "first_name": {
            "type":"string"
          },
          "last_name": {
            "type":"string"
          },
          "address": {
            "type": "string",
            "format": "address"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type":"string",
            "format": "password"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Task": {
        "required": ["title", "description", "status"],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type":"string"
          },
          "description": {
            "type":"string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "in-progress",
              "completed"
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "request": {
      "createUser": {
        "required": ["first_name", "last_name", "address", "email", "password", "confirm_password"],
        "type": "object",
        "properties": {
          "first_name": {
            "type":"string",
            "example": "John"
          },
          "last_name": {
            "type":"string",
            "example": "Doe"
          },
          "address": {
            "type": "string",
            "format": "address",
            "example": "5, John doe street"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "John@doe.com"
          },
          "password": {
            "type":"string",
            "format": "password",
            "example": "john_doe"
          },
          "confirm_password": {
            "type":"string",
            "format": "password",
            "example": "john_doe"
          }
        }
      },
      "loginUser": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "John@doe.com"
          },
          "password": {
            "type":"string",
            "format": "password",
            "example": "john_doe"
          }
        }
      },
      "createTask": {
        "required": ["title", "description", "status"],
        "type": "object",
        "properties": {
          "title": {
            "type":"string"
          },
          "description": {
            "type":"string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "in-progress",
              "completed"
            ]
          }
        }
      },
      "updateTask": {
        "type": "object",
        "properties": {
          "title": {
            "type":"string"
          },
          "description": {
            "type":"string"
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "in-progress",
              "completed"
            ]
          }
        }
      }
    },
    "response": {
      "authResponse_success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "task_success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "task": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "tasks_success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "tasks": {
              "$ref": "#/components/schemas/Task"
            }
          }
        }
      },
      "response_error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          }
        }
      }
      
    }
  },
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "User can sign up.",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/request/createUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/authResponse_success"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User can sign in.",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/request/loginUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/authResponse_success"
                }
              }
            }
          },
          "404": {
            "description": "Email or password is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks": {
      "post": {
        "summary": "User can create a task.",
        "security": [{
          "bearerAuth": []
        }],
        "operationId": "createTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/request/createTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/task_success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "User can view all the tasks he/she have created.",
        "security": [{
          "bearerAuth": []
        }],
        "parameters": [{
          "name" : "status",
          "in" : "query",
          "description" : "User can filter through tasks using task status.",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }],
        "operationId": "getAllTask",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/tasks_success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tasks/{id}": {
      "patch": {
        "summary": "User can edit a task.",
        "security": [{
          "bearerAuth": []
        }],
        "parameters": [{
          "name" : "id",
          "in" : "path",
          "description" : "user task id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }],
        "operationId": "updateTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/request/updateTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/task_success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          },
          "404": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "User can view a task using its ID.",
        "security": [{
          "bearerAuth": []
        }],
        "parameters": [{
          "name" : "id",
          "in" : "path",
          "description" : "user task id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }],
        "operationId": "getATask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/request/updateTask"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/task_success"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/response/response_error"
                }
              }
            }
          }
        }
      }
    }
  }
}
